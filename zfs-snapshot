#!/usr/bin/env sh
#3.1.0
#2019-04-26

#Copyright (C) 2018,2019 Brandon Zorn, brandonzorn@cock.li
#
#This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

hlp(){
	printf "GENERAL\n"
	printf " -h\tprint this help\n"
	printf "\nSNAPSHOT PRINTING\n"
	printf " -a\tprint all snapshots\n"
	printf " -d\tprint snapshots of storage/{anime,data} and torrents\n"
	printf " -c\tprint snapshots of zroot/CACHE/torrents\n"
	printf " -s\tprint snapshots of ssd-mirror/{MUSIC,KVM}\n"
	printf " -u\tprint snapshots of zroot/HOME/*\n"
	printf " -l\tprint snapshots of zroot/ROOT/gentoo{/var,/var/log}\n"
	printf "\nSNAPSHOT CREATION\n"
	printf "\tformat  : pool/dataset@${S}\n"
	printf " -m1\tSnapshot: zroot/ROOT/gentoo\n"
	printf " -m2\tSnapshot: zroot/HOME/brandon\n"
	printf " -m3\tSnapshot: storage/anime\n"
	printf " -m4\tSnapshot: storage/data\n"
	printf " -m5\tSnapshot: ssd-mirror/KVM\n"
	printf " -m6\tSnapshot: torrents/\n"
	printf " -m7\tSnapshot: zroot/CACHE/torrents\n"
	printf "\nBACKUP\n"
	printf " -B\texport snapshot passed in \$1\n"
	printf "\nCREATION\n"
	printf "zfs create -o mountpoint=/mnt pool/dataset\n"
	printf "\nMISC\n"
	printf "zfs send pool/dataset@snapshot | zstd -T0 >| /tmp/backup.zst\n"
	printf "unzstd -c backup.zst | zfs receive pool/newdataset\n\n"
	printf "zfs set mountpoint=/newmount pool/dataset\n\n"
	printf "zfs snapshot -r zroot/ROOT/gentoo@<type>-<date>\n"
	printf "zfs rollback -r <pool/dataset@snapshot>\n"
	printf "zfs destroy <pool/dataset@snapshot>\n"
	printf "zfs list -t snapshot\n"
}

S="manual-$(date +%F-%H%M)"
ZFS="/sbin/zfs"
if [ -z "${1}" ];then hlp;exit;fi
while true;do
	case "${1}" in
		-m1) "$ZFS" snapshot -r zroot/ROOT/gentoo@${S};shift;;
		-m2) "$ZFS" snapshot -r zroot/HOME/brandon@${S};shift;;
		-m3) "$ZFS" snapshot -r storage/anime@${S};shift;;
		-m4) "$ZFS" snapshot -r storage/data@${S};shift;;
		-m5) "$ZFS" snapshot -r ssd-mirror/KVM@${S};shift;;
		-m6) "$ZFS" snapshot -r torrents@${S};shift;;
		-m7) "$ZFS" snapshot -r zroot/CACHE/torrents@${S};shift;;
		-B) shift;zfs send "${1}" | zstd -T0 >| "${1##*/}.zst";exit;;
		-a) "$ZFS" list -t snapshot;shift;;
		-c)
			"$ZFS" list -t snapshot \
				zroot/CACHE/torrents
			shift;;
		-s)
			"$ZFS" list -t snapshot \
				ssd-mirror/MUSIC \
				ssd-mirror/KVM
			shift;;
		-u)
			"$ZFS" list -t snapshot \
				zroot/HOME/brandon \
				zroot/HOME/root \
				zroot/HOME/lxc \
				zroot/HOME/sandbox
			shift;;
		-d)
			"$ZFS" list -t snapshot \
				storage/data \
				storage/anime \
				torrents
			shift;;
		-l)
			"$ZFS" list -t snapshot \
				zroot/ROOT/gentoo \
				zroot/ROOT/gentoo/var \
				zroot/ROOT/gentoo/var/log
			shift;;
		-h) hlp;exit;;
		*) break;;
	esac
done
