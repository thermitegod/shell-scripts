#!/usr/bin/env sh
#3.1.0
#2019-05-17

#Copyright (C) 2018,2019 Brandon Zorn, brandonzorn@cock.li
#
#This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 3
#    as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

file_sort(){
	find . -maxdepth 1 -type f -size +"${lower}" -size -"${upper}" -exec mkdir -p "${upper}" \; -quit
	find . -maxdepth 1 -type f -size +"${lower}" -size -"${upper}" -exec mv -i -- "{}" "${upper}" \;
}

if [ -z "${1}" ];then "${0}" -h;exit;fi
while true;do
	case "${1}" in
		-a) mode="all";shift;;
		-m10) mode="less10M";shift;;
		-m100) mode="less100M";shift;;
		-m150) mode="less150M";shift;;
		-m200) mode="less200M";shift;;
		-m500) mode="less500M";shift;;
		-g1) mode="less1G";shift;;
		-g10) mode="less10G";shift;;
		-g100) mode="less100G";shift;;
		-l) count-size;exit;;
		-h)
			printf "Sort files by size \n"
			printf " -a\tsort everything\n"
			printf " -h\tprint this help\n"
			printf " -l\tprint number of each file size\n"
			printf "\nSORT\n"
			printf " -m10\tSort less than 10M\n"
			printf " -m100\tSort less than 100M\n"
			printf " -m150\tSort less than 150M\n"
			printf " -m200\tSort less than 200M\n"
			printf " -m500\tSort less than 500M\n"
			printf " -g1\tSort less than 1G\n"
			printf " -g10\tSort less than 10G\n"
			printf " -g100\tSort less than 100G\n"
			exit;;
		*) break;;
	esac
done

case "${mode}" in
	less10M)
		lower="0k"
		upper="10M"
		file_sort
		;;
	less100M)
		lower="10M"
		upper="100M"
		file_sort
		;;
	less150M)
		lower="100M"
		upper="150M"
		file_sort
		;;
	less200M)
		lower="150M"
		upper="200M"
		file_sort
		;;
	less500M)
		lower="200M"
		upper="500M"
		file_sort
		;;
	less1G)
		lower="500M"
		upper="1G"
		file_sort
		;;
	less10G)
		lower="1G"
		upper="10G"
		file_sort
		;;
	less100G)
		lower="10G"
		upper="100G"
		file_sort
		;;
	all)
		${0} -m10
		${0} -m100
		${0} -m150
		${0} -m200
		${0} -m500
		${0} -g1
		${0} -g10
		${0} -g100
		;;
esac
