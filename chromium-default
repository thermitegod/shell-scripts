#!/usr/bin/env python3
# 6.9.1
# 2020-08-21

# Copyright (C) 2018,2019,2020 Brandon Zorn <brandonzorn@cock.li>
#
# This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 3
#    as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <https://www.gnu.org/licenses/>.

import argparse
import os
from pathlib import Path

from utils import utils


def run_chrome(cmd, path):
    try:
        if os.environ['WAYLAND_DISPLAY']:
            display = 'wayland'
    except KeyError:
        display = 'x11'

    cmd += f' --user-data-dir={path} --ozone-platform={display}'
    utils.run_cmd(cmd)


def main():
    parser = argparse.ArgumentParser()
    profiles = parser.add_argument_group('PROFILES')
    profiles.add_argument('-d', '--default',
                          action='store_true',
                          help='default profile')
    profiles.add_argument('-e', '--extra',
                          default=None,
                          type=str,
                          help='extra profiles, supplied arg is used as profile name')
    profiles.add_argument('-s', '--sandbox',
                          action='store_true',
                          help='sandbox, all data deleted on close, ignores all other profile flags')
    browser = parser.add_argument_group('BROWSER', 'which browser version to use')
    browser.add_argument('-c', '--chrome',
                         default='chromium',
                         metavar='VERSION',
                         choices=['chromium', 'unstable', 'beta', 'release'],
                         help='set specific chrome version to use')
    args = parser.parse_args()

    utils.root_check(require_root=False)

    if args.chrome == 'chromium':
        cmd = 'chromium'
    elif args.chrome == 'unstable':
        cmd = 'google-chrome-unstable'
    elif args.chrome == 'beta':
        cmd = 'google-chrome-beta'
    else:
        cmd = 'google-chrome'

    script_name = utils.get_script_name()

    if args.sandbox or 'sandbox' in script_name:
        from tempfile import TemporaryDirectory
        with TemporaryDirectory() as tmpdir:
            run_chrome(cmd=cmd, path=tmpdir)
        return

    if args.extra is not None:
        profile = f'{cmd}-{args.extra}'
    else:
        # script/symlinks must be named chromium-<profile> to work
        # or this can be changed
        # e.g. ln -s chromium-default chromium-<profile>
        profile = f'{cmd}-{script_name[9:]}'

    path = Path() / os.environ['XDG_CONFIG_HOME'] / 'chrome' / profile
    run_chrome(cmd=cmd, path=path)


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        raise SystemExit
